


name: package builder commit
on:
  push:
jobs:
  create_version:
    runs-on: ubuntu-20.04
    name: create version doc
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            fetch-depth: 0  
      - name: Set up Python 3.10.6
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.6'
      - name: install dunamai
        run: pip install dunamai
      - name: replace_version 
        run: | 
          sed -i -e s/'from dunamai import Version,Pattern'// ofscraper/__version__.py 
          sed -i -e  s/'Version.from_git(pattern=.*'/\""$(dunamai from git --format "{base}+{branch}.{commit}" --pattern "(?P<base>\d+\.\d+\.\d+|\d+\.\d+)")"\"/ ofscraper/__version__.py
      - name: show file
        run: cat ofscraper/__version__.py 
      - name: upload file
        uses: actions/upload-artifact@v3
        with:
          name: ofscraper_version
          path: /home/runner/work/OF-Scraper/OF-Scraper/ofscraper/__version__.py 
  linux:
    needs: [create_version]    
    runs-on: ubuntu-20.04
    name: create linux release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            fetch-depth: 0
      - uses: addnab/docker-run-action@v3
        with:
            image: ubuntu:18.04
            options: -v ${{ github.workspace }}:/work
            shell: bash
            run: |
                cd work
                apt-get update -y
                apt-get upgrade -y
                apt-get install curl git -y
                apt-get install python3-dev python-dev pkg-config build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev wget libbz2-dev -y
                apt-get install build-dep python3 -y
                apt-get install build-essential gdb lcov pkg-config -y
                apt-get install libbz2-dev libffi-dev libgdbm-dev libgdbm-compat-dev liblzma-dev -y
                apt-get install libncurses5-dev libreadline6-dev libsqlite3-dev libssl-dev -y
                apt-get install lzma lzma-dev tk-dev uuid-dev zlib1g-dev -y
                wget https://www.python.org/ftp/python/3.11.4/Python-3.11.4.tar.xz
                tar -xf Python-3.11.4.tar.xz 
                cd Python-3.11.4/ 
                ./configure --enable-optimizations --enable-shared
                make -j $(nproc)
                cd ..
                ./Python-3.11.4/python -m venv .venv
                 curl -sSL https://install.python-poetry.org | ./Python-3.11.4/python -
                 /root/.local/bin/poetry install --with build
                /root/.local/bin/poetry install
                /root/.local/bin/poetry run pyinstaller .venv/bin/ofscraper --collect-submodules application --name onefiletemp
                /root/.local/bin/poetry run pyinstaller .venv/bin/ofscraper --collect-submodules application --name onedirtemp 
#       - name: commit
#         uses: pr-mpt/actions-commit-hash@v2
#         id: commit
#       - name: replace version.py
#         uses: actions/download-artifact@v3
#         with:
#           name: ofscraper_version 
#           path: ofscraper
#       - name: Set up Python 3.10.6
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.10.6'
#       - name: create virtualenv
#         run: python3.10 -m venv .venv
#       - name: install poetry
#         uses: abatilo/actions-poetry@v2
#         with:
#           poetry-version: 1.4.1
#       - name: Install package
#         run: poetry install
#       - name: Install builder
#         run: poetry add pyinstaller    
#       - name: build package
#         run: poetry run pyinstaller .venv/bin/ofscraper --collect-submodules application --onefile --name "ofscraper_linux_${{ steps.commit.outputs.short}}"
#       - name: upload file
#         uses: actions/upload-artifact@v3
#         with:
#           name: ofscraper_linux
#           path: "dist/ofscraper_linux_${{ steps.commit.outputs.short}}"
#       - name: build package dir
#         run: poetry run pyinstaller .venv/bin/ofscraper --collect-submodules application --name "ofscraper_linux_${{steps.commit.outputs.short}}" 
#       - uses: vimtor/action-zip@v1
#         with:
#           files: "dist/ofscraper_linux_${{steps.commit.outputs.short}}"
#           dest: "dist/ofscraper_linux_${{steps.commit.outputs.short}}.zip"
#       - name: upload file
#         uses: actions/upload-artifact@v3
#         with:
#           name: ofscraper_linux_zip
#           path: "dist/ofscraper_linux_${{steps.commit.outputs.short}}.zip"            
#   windows:
#     needs: [create_version]
#     runs-on: windows-latest
#     name: create windows release
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#         with:
#             fetch-depth: 0        
#       - name: commit
#         uses: pr-mpt/actions-commit-hash@v2
#         id: commit   
#       - name: replace version.py
#         uses: actions/download-artifact@v3
#         with:
#           name: ofscraper_version 
#           path: ofscraper
#       - name: Set up Python 3.10.6
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.10.6'
#       - name: install poetry
#         uses: abatilo/actions-poetry@v2
#         with:
#           poetry-version: 1.4.1 
#       - name: create virtualenv
#         run: python3 -m venv .venv
#       - name: active env
#         run: poetry env use  .venv/Scripts/python3        
#       - name: Install package
#         run: poetry install
#       - name: Install builder       
#         run: poetry add pyinstaller
     
#       - name: build package
       
#         run: poetry run pyinstaller ofscraper/__main__.py --collect-submodules application --onefile --name "ofscraper_windows_${{ steps.commit.outputs.short}}"
#       - name: upload file
#         uses: actions/upload-artifact@v3
#         with:
#           name: ofscraper_windows
#           path: 'dist\ofscraper_windows_${{ steps.commit.outputs.short}}.exe'
#       - name: build package dir
#         run: poetry run pyinstaller ofscraper/__main__.py --collect-submodules application --name "ofscraper_windows_${{steps.commit.outputs.short}}" 
#       - uses: vimtor/action-zip@v1
#         with:
#           files: "dist/ofscraper_windows_${{steps.commit.outputs.short}}"
#           dest: "dist/ofscraper_windows_${{steps.commit.outputs.short}}.zip"
#       - name: upload file
#         uses: actions/upload-artifact@v3
#         with:
#           name: ofscraper_windows_zip
#           path: "dist/ofscraper_windows_${{steps.commit.outputs.short}}.zip"               
#   mac:
#     needs: [create_version]
#     runs-on: macos-latest 
#     name: create mac release
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#         with:
#             fetch-depth: 0      
#       - name: commit
#         uses: pr-mpt/actions-commit-hash@v2
#         id: commit            
#       - name: replace version.py
#         uses: actions/download-artifact@v3
#         with:
#           name: ofscraper_version     
#           path: ofscraper
#       - name: Set up Python 3.10.6
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.10.6'
#       - name: create virtualenv
#         run: python3 -m venv .venv
#       - name: install poetry
#         uses: abatilo/actions-poetry@v2
#         with:
#           poetry-version: 1.4.1
#       - name: Install package
#         run: poetry install
#       - name: Install builder
#         run: pip install pyinstaller
#       - name: build package
#         run: poetry run pyinstaller ofscraper/__main__.py --collect-submodules application --onefile --name "ofscraper_macos_${{ steps.commit.outputs.short}}"
#       - name: upload file
#         uses: actions/upload-artifact@v3
#         with:
#           name: ofscraper_macos
#           path: "dist/ofscraper_macos_${{ steps.commit.outputs.short}}"
#       - name: build package dir
#         run: poetry run pyinstaller .venv/bin/ofscraper --collect-submodules application --name "ofscraper_macos_${{ steps.commit.outputs.short}}" 
#       - uses: vimtor/action-zip@v1
#         with:
#           files: "dist/ofscraper_macos_${{ steps.commit.outputs.short}}"
#           dest: "dist/ofscraper_macos_${{ steps.commit.outputs.short}}.zip"
#       - name: upload file
#         uses: actions/upload-artifact@v3
#         with:
#           name: ofscraper_macos_zip
#           path: "dist/ofscraper_macos_${{steps.commit.outputs.short}}.zip"    
  
#   publish_release:
#     runs-on: ubuntu-latest
#     name: publish
#     needs: [mac,windows,linux]
#     permissions:
#       contents: write 
#     steps:
#       - name: Download linux
#         uses: actions/download-artifact@v3
#         with:
#           name: ofscraper_linux  
#       - name: Download linux zip
#         uses: actions/download-artifact@v3
#         with:
#           name: ofscraper_linux_zip 

#       - name: Download mac
#         uses: actions/download-artifact@v3
#         with:
#           name: ofscraper_macos   
#       - name: Download mac zip
#         uses: actions/download-artifact@v3
#         with:
#           name: ofscraper_macos_zip         
#       - name: Download windows
#         uses: actions/download-artifact@v3
#         with:
#           name: ofscraper_windows        
#       - name: Download windows zip
#         uses: actions/download-artifact@v3
#         with:
#           name: ofscraper_windows_zip  
#       - name: commit
#         uses: pr-mpt/actions-commit-hash@v2
#         id: commit
#       - name: Get current date
#         id: date
#         run: echo "date=$(date +'%Y.%m.%d_%H:%M')" >> $GITHUB_OUTPUT


#       - name: create release
#         uses: ncipollo/release-action@v1
#         with:
#           artifacts: "/home/runner/work/OF-Scraper/OF-Scraper/ofscraper_*"
#           tag: ${{steps.commit.outputs.short}}
#           name: ${{env.name}}
#           body: ${{env.body}}
#         env:
#           name: "${{steps.date.outputs.date}}_${{ github.head_ref || github.ref_name }}_${{ steps.commit.outputs.short}}_package"
#           body: "This is a auto generated release created from commit ${{ steps.commit.outputs.hash}}"

 
