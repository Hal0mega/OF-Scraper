


name: package builder commit
on:
  push:
    branches: "main"
jobs:
  create_version:
    runs-on: ubuntu-20.04
    name: create version doc
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            fetch-depth: 0  
      - name: Set up Python 3.10.6
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.6'
      - name: install dunamai
        run: pip install dunamai
      - name: replace_version 
        run: | 
          sed -i -e s/'from dunamai import Version,Pattern'// ofscraper/__version__.py 
          sed -i -e  s/' Version.from_git(pattern=Pattern.DefaultUnprefixed).serialize(format="{base}+{branch}.{commit}",metadata=False)'/\""$(dunamai from git --format "{base}+{branch}.{commit}" --pattern default-unprefixed)"\"/ ofscraper/__version__.py
      - name: show file
        run: cat ofscraper/__version__.py 
      - name: upload file
        uses: actions/upload-artifact@v3
        with:
          name: ofscraper_version
          path: /home/runner/work/OF-Scraper/OF-Scraper/ofscraper/__version__.py 
  linux:
    needs: [create_version]
    runs-on: ubuntu-20.04
    name: create linux release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            fetch-depth: 0
      - name: commit
        uses: pr-mpt/actions-commit-hash@v2
        id: commit
      - name: replace version.py
        uses: actions/download-artifact@v3
        with:
          name: ofscraper_version 
          path: ofscraper
      - name: Set up Python 3.10.6
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.6'
      - name: create virtualenv
        run: python3.10 -m venv .venv
      - name: install poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.4.1
      - name: Install package
        run: poetry install
      - name: Install builder
        run: poetry add pyinstaller    
      - name: build package
        run: poetry run pyinstaller .venv/bin/ofscraper --collect-submodules application --onefile --name "ofscraper_linux_${{ steps.commit.outputs.short}}"
      - name: upload file
        uses: actions/upload-artifact@v3
        with:
          name: ofscraper_linux
          path: "/home/runner/work/OF-Scraper/OF-Scraper/dist/ofscraper_linux_${{ steps.commit.outputs.short}}"
  windows:
    needs: [create_version]
    runs-on: windows-latest
    name: create windows release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            fetch-depth: 0        
      - name: replace version.py
        uses: actions/download-artifact@v3
        with:
          name: ofscraper_version 
          path: ofscraper
      - name: Set up Python 3.10.6
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.6'
      - name: install poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.4.1 
      - name: create virtualenv
        run: python3 -m venv .venv
      - name: active env
        run: poetry env use  .venv/Scripts/python3        
      - name: Install package
        run: poetry install
      - name: Install builder       
        run: poetry add pyinstaller
     
      - name: build package
       
        run: poetry run pyinstaller .venv/Scripts/ofscraper --collect-submodules application --onefile --name "ofscraper_windows_${{ steps.commit.outputs.short}}"
      - name: upload file
        uses: actions/upload-artifact@v3
        with:
          name: ofscraper_windows
          path: 'D:\a\OF-Scraper\OF-Scraper\dist\ofscraper_windows_${{ steps.commit.outputs.short}}.exe'
  mac:
    needs: [create_version]
    runs-on: macos-latest 
    name: create mac release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            fetch-depth: 0      
      - name: commit
        uses: pr-mpt/actions-commit-hash@v2
        id: commit            
      - name: replace version.py
        uses: actions/download-artifact@v3
        with:
          name: ofscraper_version     
          path: ofscraper
      - name: Set up Python 3.10.6
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.6'
      - name: create virtualenv
        run: python3 -m venv .venv
      - name: install poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.4.1
      - name: Install package
        run: poetry install
      - name: Install builder
        run: pip install pyinstaller
      - name: build package
        run: poetry run pyinstaller .venv/bin/ofscraper --collect-submodules application --onefile --name "ofscraper_macos_${{ steps.commit.outputs.short}}"
      - name: upload file
        uses: actions/upload-artifact@v3
        with:
          name: ofscraper_macos
          path: "/Users/runner/work/OF-Scraper/OF-Scraper/dist/ofscraper_macos_${{ steps.commit.outputs.short}}"
  publish_release:
    runs-on: ubuntu-latest
    name: publish
    needs: [linux,windows,mac]
    permissions:
      contents: write 
    steps:
      - name: Download linux
        uses: actions/download-artifact@v3
        with:
          name: ofscraper_linux  
      - name: Download mac
        uses: actions/download-artifact@v3
        with:
          name: ofscraper_macos          
      - name: Download windows
        uses: actions/download-artifact@v3
        with:
          name: ofscraper_windows        
      - name: commit
        uses: pr-mpt/actions-commit-hash@v2
        id: commit
      - name: show files
        run: ls /home/runner/work/OF-Scraper/OF-Scraper 
#       - name: upload package
#         uses: ncipollo/release-action@v1
#         with:
#           artifacts: "/home/runner/work/OF-Scraper/OF-Scraper/ofscraper_linux_${{ steps.commit.outputs.short}},/home/runner/work/OF-Scraper/OF-Scraper/ofscraper_windows_${{ steps.commit.outputs.short}}.exe,/home/runner/work/OF-Scraper/OF-Scraper/ofscraper_macos_${{ steps.commit.outputs.short}}"
#           tag: ${{env.name}}
#         env:
#           name: "package_${{ steps.commit.outputs.short}}"
#           body: "This is a generated release created from commit ${{ steps.commit.outputs.hash}}"

 
